{"name":"php.tools","tagline":"PHP coding style formatter - Tooling for formatting, testing and code coverage","body":"# Installation\r\n\r\n`php composer.phar require dericofilho/fmt`\r\n\r\n# What does the Code Formatter do?\r\n\r\n`vendor/bin/fmt.php filename filename2 ... filenameN`\r\n\r\n### K&R configuration\r\n<table>\r\n<tr>\r\n<td>Before</td>\r\n<td>After</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<pre><code>&lt;?php\r\nfor($i = 0; $i &lt; 10; $i++)\r\n{\r\nif($i%2==0)\r\necho \"Flipflop\";\r\n}\r\n</code></pre>\r\n</td>\r\n<td>\r\n<pre><code>&lt;?php\r\nfor ($i = 0; $i &lt; 10; $i++) {\r\n\tif ($i%2 == 0) {\r\n\t\techo \"Flipflop\";\r\n\t}\r\n}\r\n</code></pre>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<pre><code>&lt;?php\r\n$a = 10;\r\n$otherVar = 20;\r\n$third = 30;\r\n</code></pre>\r\n</td>\r\n<td>\r\n<pre><code>&lt;?php\r\n$a        = 10;\r\n$otherVar = 20;\r\n$third    = 30;\r\n</code></pre>\r\n<i>This can be disabled with the option \"disable_auto_align\"</i>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<pre><code>&lt;?php\r\nnamespace NS\\Something;\r\nuse \\OtherNS\\C;\r\nuse \\OtherNS\\B;\r\nuse \\OtherNS\\A;\r\nuse \\OtherNS\\D;\r\n\r\n$a = new A();\r\n$b = new C();\r\n$d = new D();\r\n</code></pre>\r\n</td>\r\n<td>\r\n<pre><code>&lt;?php\r\nnamespace NS\\Something;\r\n\r\nuse \\OtherNS\\A;\r\nuse \\OtherNS\\C;\r\nuse \\OtherNS\\D;\r\n\r\n$a = new A();\r\n$b = new C();\r\n$d = new D();\r\n</code></pre>\r\n<i>note how it sorts the use clauses, and removes unused ones</i>\r\n</td>\r\n</tr>\r\n</table>\r\n\r\n### PSR configuration\r\n<table>\r\n<tr>\r\n<td>Before</td>\r\n<td>After</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<pre><code>&lt;?php\r\nfor($i = 0; $i &lt; 10; $i++)\r\n{\r\nif($i%2==0)\r\necho \"Flipflop\";\r\n}\r\n</code></pre>\r\n</td>\r\n<td>\r\n<pre><code>&lt;?php\r\nfor ($i = 0; $i &lt; 10; $i++) {\r\n    if ($i%2 == 0) {\r\n        echo \"Flipflop\";\r\n    }\r\n}\r\n</code></pre>\r\n<i>Note the identation of 4 spaces.</i>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<pre><code>&lt;?php\r\nclass A {\r\nfunction a(){\r\nreturn 10;\r\n}\r\n}\r\n</code></pre>\r\n</td>\r\n<td>\r\n<pre><code>&lt;?php\r\nclass A\r\n{\r\n    public function a()\r\n    {\r\n        return 10;\r\n    }\r\n}\r\n</code></pre>\r\n<i>Note the braces position, and the visibility adjustment in the method a().</i>\r\n</td>\r\n</tr>\r\n<tr>\r\n<td>\r\n<pre><code>&lt;?php\r\nnamespace NS\\Something;\r\nuse \\OtherNS\\C;\r\nuse \\OtherNS\\B;\r\nuse \\OtherNS\\A;\r\nuse \\OtherNS\\D;\r\n\r\n$a = new A();\r\n$b = new C();\r\n$d = new D();\r\n</code></pre>\r\n</td>\r\n<td>\r\n<pre><code>&lt;?php\r\nnamespace NS\\Something;\r\n\r\nuse \\OtherNS\\A;\r\nuse \\OtherNS\\C;\r\nuse \\OtherNS\\D;\r\n\r\n$a = new A();\r\n$b = new C();\r\n$d = new D();\r\n</code></pre>\r\n<i>note how it sorts the use clauses, and removes unused ones</i>\r\n</td>\r\n</tr>\r\n</table>","google":"UA-1919121-1","note":"Don't delete this file! It's used internally to help with page regeneration."}